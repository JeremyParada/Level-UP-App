@echo off
REM Script de deployment automatico para Level-UP App
REM Configura local.properties, compila, instala y ejecuta la app en modo debug

setlocal enabledelayedexpansion

REM Parsear argumentos
set CLEAN=0
set SKIP_BUILD=0
set VERBOSE=0

:parse_args
if "%~1"=="" goto :end_parse_args
if /i "%~1"=="-clean" set CLEAN=1
if /i "%~1"=="--clean" set CLEAN=1
if /i "%~1"=="-skipbuild" set SKIP_BUILD=1
if /i "%~1"=="--skipbuild" set SKIP_BUILD=1
if /i "%~1"=="-verbose" set VERBOSE=1
if /i "%~1"=="--verbose" set VERBOSE=1
shift
goto :parse_args
:end_parse_args

REM Banner
echo.
echo ========================================
echo    Level-UP App - Deploy Script
echo ========================================
echo.

REM 1. Detectar la ruta del Android SDK
echo [1/8] Detectando Android SDK...

set SDK_FOUND=0
set ANDROID_SDK=

REM Buscar en ubicaciones comunes
if exist "%LOCALAPPDATA%\Android\Sdk" (
    set "ANDROID_SDK=%LOCALAPPDATA%\Android\Sdk"
    set SDK_FOUND=1
)

if !SDK_FOUND!==0 if exist "%USERPROFILE%\AppData\Local\Android\Sdk" (
    set "ANDROID_SDK=%USERPROFILE%\AppData\Local\Android\Sdk"
    set SDK_FOUND=1
)

if !SDK_FOUND!==0 if not "%ANDROID_HOME%"=="" (
    if exist "%ANDROID_HOME%" (
        set "ANDROID_SDK=%ANDROID_HOME%"
        set SDK_FOUND=1
    )
)

if !SDK_FOUND!==0 if exist "C:\Android\Sdk" (
    set "ANDROID_SDK=C:\Android\Sdk"
    set SDK_FOUND=1
)

if !SDK_FOUND!==0 (
    echo [ERROR] No se encontro el Android SDK. Por favor instala Android Studio.
    echo.
    echo Rutas buscadas:
    echo   - %LOCALAPPDATA%\Android\Sdk
    echo   - %USERPROFILE%\AppData\Local\Android\Sdk
    echo   - C:\Android\Sdk
    exit /b 1
)

echo [OK] SDK encontrado en: !ANDROID_SDK!

REM 2. Configurar local.properties
echo.
echo [2/8] Configurando local.properties...

set SDK_PATH_ESCAPED=!ANDROID_SDK:\=\\!

(
echo ## This file is automatically generated by deploy-debug.bat
echo # Do not modify this file manually
echo sdk.dir=!SDK_PATH_ESCAPED!
) > local.properties

if !ERRORLEVEL! neq 0 (
    echo [ERROR] No se pudo crear local.properties
    exit /b 1
)

echo [OK] local.properties configurado correctamente

REM 3. Verificar Gradle Wrapper
echo.
echo [3/8] Verificando Gradle Wrapper...

if not exist "gradlew.bat" (
    echo [ERROR] No se encontro gradlew.bat
    echo Regenerando wrapper...
    gradle wrapper --gradle-version 8.9
)

echo [OK] Gradle Wrapper disponible

REM 4. Compilar el proyecto
if !SKIP_BUILD!==1 (
    echo.
    echo [4/8] Compilacion omitida ^(flag -SkipBuild^)
    goto skip_build
)

echo.
echo [4/8] Compilando proyecto...

REM Detener daemon de Gradle
echo Deteniendo Gradle daemon...
call gradlew.bat --stop >nul 2>&1
timeout /t 2 /nobreak >nul

REM Limpiar si se solicito
if !CLEAN!==1 (
    echo Limpiando proyecto...
    call gradlew.bat clean
    if !ERRORLEVEL! neq 0 (
        echo [ERROR] Fallo al limpiar el proyecto
        exit /b 1
    )
)

REM Compilar APK
echo Compilando APK de debug...

if !VERBOSE!==1 (
    call gradlew.bat assembleDebug
) else (
    call gradlew.bat assembleDebug >nul 2>&1
)

if !ERRORLEVEL! neq 0 (
    echo [ERROR] Error al compilar el proyecto
    call gradlew.bat assembleDebug
    exit /b 1
)

echo [OK] Proyecto compilado exitosamente

:skip_build

REM 5. Verificar que existe el APK
echo.
echo [5/8] Verificando APK...

set APK_PATH=app\build\outputs\apk\debug\app-debug.apk

if not exist "!APK_PATH!" (
    echo [ERROR] No se encontro el APK en: !APK_PATH!
    exit /b 1
)

for %%A in ("!APK_PATH!") do set APK_SIZE=%%~zA
set /a APK_SIZE_MB=!APK_SIZE! / 1048576

echo [OK] APK encontrado ^(!APK_SIZE_MB! MB^)

REM 6. Verificar ADB y dispositivo
echo.
echo [6/8] Verificando dispositivo Android...

set ADB_PATH=!ANDROID_SDK!\platform-tools\adb.exe

if not exist "!ADB_PATH!" (
    echo [ERROR] No se encontro ADB en: !ADB_PATH!
    exit /b 1
)

REM Reiniciar servidor ADB
echo Reiniciando servidor ADB...
"!ADB_PATH!" kill-server >nul 2>&1
timeout /t 1 /nobreak >nul
"!ADB_PATH!" start-server >nul 2>&1
timeout /t 2 /nobreak >nul

REM Verificar dispositivos conectados
"!ADB_PATH!" devices > temp_devices.txt 2>&1

set DEVICE_COUNT=0
for /f "skip=1 tokens=2" %%a in (temp_devices.txt) do (
    if "%%a"=="device" set /a DEVICE_COUNT+=1
)

if !DEVICE_COUNT!==0 (
    echo [ERROR] No se detecto ningun dispositivo Android conectado
    echo.
    echo Asegurate de:
    echo   1. Habilitar 'Depuracion USB' en el dispositivo
    echo   2. Conectar el dispositivo por USB
    echo   3. Aceptar el dialogo de autorizacion en el dispositivo
    echo.
    echo Para depuracion inalambrica:
    echo   adb connect ^<IP^>:5555
    del temp_devices.txt
    exit /b 1
)

REM Obtener ID del dispositivo
for /f "skip=1 tokens=1,2" %%a in (temp_devices.txt) do (
    if "%%b"=="device" (
        set DEVICE_ID=%%a
        goto device_found
    )
)

:device_found
del temp_devices.txt

echo [OK] Dispositivo detectado: !DEVICE_ID!

REM Obtener informacion del dispositivo
for /f "delims=" %%a in ('"!ADB_PATH!" -s !DEVICE_ID! shell getprop ro.product.model') do set DEVICE_MODEL=%%a
for /f "delims=" %%a in ('"!ADB_PATH!" -s !DEVICE_ID! shell getprop ro.build.version.release') do set ANDROID_VERSION=%%a

echo   Modelo: !DEVICE_MODEL!
echo   Android: !ANDROID_VERSION!

REM 7. Instalar APK
echo.
echo [7/8] Instalando APK en el dispositivo...

echo Desinstalando version anterior ^(si existe^)...
"!ADB_PATH!" -s !DEVICE_ID! uninstall com.levelup >nul 2>&1

echo Instalando nueva version...
"!ADB_PATH!" -s !DEVICE_ID! install -r "!APK_PATH!" >nul 2>&1

if !ERRORLEVEL! neq 0 (
    echo [ERROR] Error al instalar el APK
    "!ADB_PATH!" -s !DEVICE_ID! install -r "!APK_PATH!"
    exit /b 1
)

echo [OK] APK instalado correctamente

REM 8. Lanzar la aplicacion y mostrar logs
echo.
echo [8/8] Iniciando aplicacion en modo debug...

REM Limpiar logs anteriores
"!ADB_PATH!" -s !DEVICE_ID! logcat -c >nul 2>&1

REM Iniciar la aplicacion
echo Lanzando MainActivity...
"!ADB_PATH!" -s !DEVICE_ID! shell am start -n com.levelup/.MainActivity >nul 2>&1

if !ERRORLEVEL! neq 0 (
    echo [ERROR] Error al iniciar la aplicacion
    "!ADB_PATH!" -s !DEVICE_ID! shell am start -n com.levelup/.MainActivity
    exit /b 1
)

echo [OK] Aplicacion iniciada

REM Esperar a que la app inicie
timeout /t 2 /nobreak >nul

REM Mostrar logs en tiempo real
echo.
echo ========================================
echo   LOGS EN TIEMPO REAL ^(Ctrl+C para salir^)
echo ========================================
echo.

REM Filtrar logs solo de la app Level-UP
"!ADB_PATH!" -s !DEVICE_ID! logcat -v color "*:I" | findstr /i "levelup LevelUp LEVELUP com.levelup"

endlocal